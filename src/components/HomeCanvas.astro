<div data-home-canvas class='absolute bottom-0 left-0 right-0 top-0'></div>
<script>
	import type { CanvasDraw } from '@utils/canvas'
	import { setup } from '@utils/canvas'

	type Point = [x: number, y: number]
	type Grid = Point[]

	const SIZE = 16
	const LENGTH = 12

	type Line = (ctx: CanvasRenderingContext2D) => (x1: number, y1: number, x2: number, y2: number) => void
	const line: Line = ctx => (x1, y1, x2, y2) => {
		ctx.beginPath()
		ctx.moveTo(x1, y1)
		ctx.lineTo(x2, y2)
		ctx.stroke()
	}

	const draw: CanvasDraw = ctx => params => {
		const { width, height, mouseX, mouseY } = params
		if (!ctx) return
		ctx.fillStyle = 'transparent'
		ctx.strokeStyle = '#66666625'
		ctx.clearRect(0, 0, width, height)

		const grid: Grid = []
		const countX = Math.floor(width / SIZE)
		const countY = Math.floor(height / SIZE)
		for (let j = 1; j < countY; j++) {
			for (let i = 1; i < countX; i++) {
				grid.push([i * SIZE, j * SIZE])
			}
		}

		grid.forEach(([x, y]) => {
			if (x === undefined || y === undefined) return
			const [dx, dy] = [x - mouseX, y - mouseY]
			const h = Math.atan2(-dx - dy, dy - dx)
			line(ctx)(x, y, x + LENGTH * Math.cos(h), y + LENGTH * Math.sin(h))
		})
	}

	document.querySelectorAll<HTMLDivElement>('[data-home-canvas]').forEach(setup(draw))
</script>
