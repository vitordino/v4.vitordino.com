---
import type { Props as SEOProps } from 'astro-seo'
import { getCollection } from 'astro:content'
import { siteUrl } from 'src/utils/url'
import Layout from 'src/components/Layout.astro'
import ArticleHero from 'src/components/ArticleHero.astro'
import P from 'src/components/markdown/P.astro'
import A from 'src/components/markdown/A.astro'
import H2 from 'src/components/markdown/H2.astro'
import BlockQuote from 'src/components/markdown/BlockQuote.astro'
import Pre from 'src/components/markdown/Pre.astro'
import HR from 'src/components/markdown/HR.astro'
import OL from 'src/components/markdown/OL.astro'
import UL from 'src/components/markdown/UL.astro'
import LI from 'src/components/markdown/LI.astro'
import Code from 'src/components/markdown/Code.astro'
import SaltDisclaimer from 'src/components/SaltDisclaimer.astro'

export const getStaticPaths = async () => {
	const writingEntries = await getCollection('writing')
	return writingEntries.map(entry => ({
		params: { slug: entry.slug },
		props: { entry },
	}))
}

const { entry } = Astro.props
const { Content } = await entry.render()
const customComponents = {
	blockquote: BlockQuote,
	h2: H2,
	p: P,
	pre: Pre,
	hr: HR,
	a: A,
	ol: OL,
	ul: UL,
	li: LI,
	code: Code,
}

const title = `Vitor Dino â€” ${entry.data.title}`

const openGraph: SEOProps['openGraph'] = {
	basic: {
		title: entry.data.description,
		type: 'article',
		image: `${siteUrl}/og-image/writing/${entry.slug}.png`,
	},
	optional: {
		locale: 'en_US',
		siteName: 'vitordino.com',
	},
}

const twitter: SEOProps['twitter'] = {
	card: 'summary_large_image',
	title,
	description: entry.data.description,
	image: `${siteUrl}/og-image/writing/${entry.slug}.png`,
	imageAlt: entry.data.title,
}

const layoutProps: SEOProps = {
	title,
	description: entry.data.description,
	openGraph,
	twitter,
}
---

<Layout {...layoutProps}>
	<main class='writing-article'>
		<ArticleHero {...entry.data} />
		{entry.data.salt && <SaltDisclaimer date={entry.data.date} />}
		<Content components={customComponents} />
	</main>
</Layout>
<style is:global>
	.slice:not([data-theme]):nth-of-type(2n) {
		@apply bg-slate-3 dark:bg-slate-2;
	}
</style>
